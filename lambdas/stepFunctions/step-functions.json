{
  "Comment": "gecko StateMachine",
  "StartAt": "Pass",
  "States": {
    "Pass": {
      "Type": "Pass",
      "Next": "ActionChoice"
    },
    "ActionChoice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.action",
          "StringEquals": "start",
          "Next": "startServer"
        },
        {
          "Or": [
            {
              "Variable": "$.action",
              "StringEquals": "stop"
            },
            {
              "Variable": "$.action",
              "StringEquals": "restart"
            }
          ],
          "Next": "changeServerState"
        }
      ],
      "Default": "Fail"
    },
    "changeServerState": {
      "Type": "Task",
      "Resource": "${changeServerState}",
      "End": true
    },
    "startServer": {
      "Type": "Task",
      "Resource": "${changeServerState}",
      "Next": "Choice"
    },
    "Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.isInstanceReady",
              "BooleanEquals": true
            },
            {
              "Variable": "$.state",
              "StringEquals": "running"
            }
          ],
          "Next": "Parallel"
        },
        {
          "Variable": "$.isSuccessful",
          "BooleanEquals": false,
          "Next": "Fail"
        }
      ],
      "Default": "Wait"
    },
    "Parallel": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "StartMinecraft",
          "States": {
            "StartMinecraft": {
              "Type": "Task",
              "Resource": "${executeSSM}",
              "End": true
            }
          }
        },
        {
          "StartAt": "AgentRunning",
          "States": {
            "AgentRunning": {
              "Type": "Task",
              "Next": "ListCommands",
              "Parameters": {
                "DocumentName": "AmazonCloudWatch-ManageAgent",
                "InstanceIds.$": "States.Array($.instanceId)",
                "Parameters": {
                  "action": [
                    "status"
                  ],
                  "mode": [
                    "ec2"
                  ]
                }
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:sendCommand",
              "ResultPath": "$.agentCheck"
            },
            "ListCommands": {
              "Type": "Task",
              "Next": "WaitCheck",
              "Parameters": {
                "CommandId.$": "$.agentCheck.CommandId",
                "InstanceId.$": "$.instanceId"
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:listCommands",
              "ResultPath": "$.agentCheckStatus"
            },
            "WaitCheck": {
              "Type": "Wait",
              "Seconds": 15,
              "Next": "ChoiceAgentRunning"
            },
            "ChoiceAgentRunning": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.agentCheckStatus.status",
                  "StringEquals": "running",
                  "Next": "Success"
                }
              ],
              "Default": "InstallCloudWatchAgent"
            },
            "Success": {
              "Type": "Succeed"
            },
            "InstallCloudWatchAgent": {
              "Type": "Task",
              "Parameters": {
                "DocumentName": "AWS-ConfigureAWSPackage",
                "InstanceIds.$": "States.Array($.instanceId)",
                "Parameters": {
                  "action": [
                    "Install"
                  ],
                  "name": [
                    "AmazonCloudWatchAgent"
                  ]
                }
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:sendCommand",
              "Next": "ListCommandsAgentInstall",
              "ResultPath": "$.agentInstall"
            },
            "ListCommandsAgentInstall": {
              "Type": "Task",
              "Next": "WaitAgentInstall",
              "Parameters": {
                "CommandId.$": "$.agentInstall.CommandId",
                "InstanceId.$": "$.instanceId"
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:listCommands",
              "ResultPath": "$.agentInstallStatus"
            },
            "WaitAgentInstall": {
              "Type": "Wait",
              "Seconds": 15,
              "Next": "AgentResult"
            },
            "AgentResult": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.agentInstallStatus.Status",
                  "StringEquals": "Success",
                  "Next": "RunGitHubScript"
                },
                {
                  "Variable": "$.agentInstallStatus.Status",
                  "StringEquals": "Failed",
                  "Next": "FailCommand"
                }
              ],
              "Default": "ListCommandsAgentInstall"
            },
            "RunGitHubScript": {
              "Type": "Task",
              "Next": "ListCommandsScript",
              "Parameters": {
                "DocumentName": "AWS-RunRemoteScript",
                "InstanceIds.$": "States.Array($.instanceId)",
                "Parameters": {
                  "sourceType": [
                    "GitHub"
                  ],
                  "sourceInfo": [
                    "{\"owner\":\"arturlr\", \"repository\": \"minecraft-server-dashboard\", \"path\": \"scripts/adding_cron.sh\", \"getOptions\": \"branch:dev\" }"
                  ],
                  "commandLine": [
                    "bash adding_cron.sh"
                  ]
                }
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:sendCommand",
              "ResultPath": "$.script"
            },
            "ListCommandsScript": {
              "Type": "Task",
              "Next": "WaitCustomScript",
              "Parameters": {
                "CommandId.$": "$.CommandId",
                "InstanceId.$": "$.instanceId"
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:listCommands",
              "ResultPath": "$.scriptStatus"
            },
            "WaitCustomScript": {
              "Type": "Wait",
              "Seconds": 15,
              "Next": "ScriptResult"
            },
            "ScriptResult": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.scriptStatus.State",
                  "StringEquals": "Failed",
                  "Next": "FailCommand"
                },
                {
                  "Variable": "$.scriptStatus.Status",
                  "StringEquals": "Success",
                  "Next": "ConfigureCloudWatchAgent"
                }
              ],
              "Default": "WaitCustomScript"
            },
            "FailCommand": {
              "Type": "Fail"
            },
            "ConfigureCloudWatchAgent": {
              "Type": "Task",
              "Parameters": {
                "DocumentName": "AmazonCloudWatch-ManageAgent",
                "InstanceIds.$": "States.Array($.instanceId)",
                "Parameters": {
                  "action": [
                    "configure"
                  ],
                  "mode": [
                    "ec2"
                  ],
                  "optionalConfigurationLocation": [
                    "/amplify/minecraftserverdashboard/amazoncloudwatch-linux"
                  ],
                  "optionalConfigurationSource": [
                    "ssm"
                  ],
                  "optionalRestart": [
                    "yes"
                  ]
                }
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:sendCommand",
              "Next": "ListCommandsConfigureAgent",
              "ResultPath": "$.agentConfig"
            },
            "ListCommandsConfigureAgent": {
              "Type": "Task",
              "End": true,
              "Parameters": {
                "CommandId.$": "$.CommandId",
                "InstanceId.$": "$.instanceId"
              },
              "Resource": "arn:aws:states:::aws-sdk:ssm:listCommands"
            }
          }
        }
      ],
      "End": true
    },
    "Wait": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "startServer"
    },
    "Fail": {
      "Type": "Fail"
    }
  }
}